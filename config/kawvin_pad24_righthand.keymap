/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/*
&led_strip {
    chain-length = <24>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
*/

#define DEFAULT 0
#define NUMLEFT 1
#define FUNRIGHT 2
#define FUNLEFT 3
#define FUN 4
#define LSWITCH 5

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
//  ---------------------------------------------------------------------------------
//  |ESC        |TAB  |BSPC        |EQUAL|
//  |NLCK       |SLASH|MULTIPLY    |MINUS|
//  |7          |8    |9           |PLUS |
//  |4          |5    |6           |     |
//  |1          |2    |3           |ENTER|
//  |&lt 2 KP_N0|     |&lt 5 KP_DOT|     |


                        bindings = <
&kp ESC      &kp TAB       &kp BSPC         &kp EQUAL     
&kp KP_NLCK  &kp KP_SLASH  &kp KP_MULTIPLY  &kp KP_MINUS  
&kp KP_N7    &kp KP_N8     &kp KP_N9        &kp KP_PLUS   
&kp KP_N4    &kp KP_N5     &kp KP_N6                      
&kp KP_N1    &kp KP_N2     &kp KP_N3        &kp KP_ENTER  
&lt 2 KP_N0                &lt 5 KP_DOT                   


                                >;
                        };

                numleft_layer {
//  ---------------------------------------------------------------------------------
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |


                        bindings = <
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans          
&trans  &trans  &trans  &trans  
&trans          &trans          


                                >;
                        };

                funright_layer {
//  ---------------------------------------------------------------------------------
//  |&bootloader|    |    |    |
//  |           |    |    |    |
//  |           |    |    |    |
//  |           |    |    |    |
//  |           |    |    |    |
//  |           |    |    |    |


                        bindings = <
&bootloader  &trans  &trans  &trans  
&trans       &trans  &trans  &trans  
&trans       &trans  &trans  &trans  
&trans       &trans  &trans          
&trans       &trans  &trans  &trans  
&trans               &trans          


                                >;
                        };

                funleft_layer {
//  ---------------------------------------------------------------------------------
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |

                        bindings = <
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans          
&trans  &trans  &trans  &trans  
&trans          &trans        

                                >;
                        };

                fun_layer {
//  ---------------------------------------------------------------------------------
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |

                        bindings = <
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans          
&trans  &trans  &trans  &trans  
&trans          &trans        

                                >;
                        };
                
                lswitch_layer {
//  ---------------------------------------------------------------------------------
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |
//  |    |    |    |    |

                        bindings = <
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  
&trans  &trans  &trans          
&trans  &trans  &trans  &trans  
&trans          &trans        
                                >;
                };
        };
};
